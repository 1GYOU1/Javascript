/*
<배열의 길이를 2의 거듭제곱으로 만들기>

문제 설명
정수 배열 arr이 매개변수로 주어집니다. arr의 길이가 2의 정수 거듭제곱이 되도록 arr 뒤에 정수 0을 추가하려고 합니다. arr에 최소한의 개수로 0을 추가한 배열을 return 하는 solution 함수를 작성해 주세요.

제한사항
1 ≤ arr의 길이 ≤ 1,000
1 ≤ arr의 원소 ≤ 1,000
입출력 예
arr	result
[1, 2, 3, 4, 5, 6]	[1, 2, 3, 4, 5, 6, 0, 0]
[58, 172, 746, 89]	[58, 172, 746, 89]
입출력 예 설명
입출력 예 #1

예제 1번의 arr의 길이는 6입니다. arr의 길이를 2의 정수 거듭제곱으로 만드는 방법은 0을 2개, 10개, 26개,..., 추가하는 방법이 있고 그중 최소한으로 0을 추가하는 방법은 2개를 추가하는 것입니다. 따라서 [1, 2, 3, 4, 5, 6, 0, 0]을 return 합니다.
입출력 예 #2

예제 2번의 arr의 길이는 4이고 이미 2의 정수 거듭제곱입니다. 따라서 뒤에 0을 추가하지 않아도 되므로 [58, 172, 746, 89]를 return 합니다.
*/

//나의 풀이
const solution = arr => {
    let arrLength = arr.length;
    let powNum = Math.pow(2, Math.ceil(Math.log2(arrLength)))
    for(let i=0;i<powNum-arrLength;i++){
        arr.push(0)
    }
    return arr;
}

/*
    Math.pow(2, 3) -> 8 제곱근 구하기
    Math.ceil(2.5849..) -> 3 무조건 반올림
    Math.log2(6) -> 2.5849.. 2의 몇 제곱인지 반환해줌
    
    이 세 가지 메소드? 함수들을 조합해서 최소 2의 제곱근을 구해주고, 
    0이 몇개 들어가야하는지 구하기 위해 그 값에서 arr의 원래 length를 빼준 만큼
    for문으로 돌려서 0을 추가하는 방식으로 풀었다.

    초기 arr.length를 변수로 지정한 이유는 for문으로 0을 push하면서 길이를 바꾸기 때문이다 !
*/
