/*
<다음 큰 숫자>

문제 설명
자연수 n이 주어졌을 때, n의 다음 큰 숫자는 다음과 같이 정의 합니다.

조건 1. n의 다음 큰 숫자는 n보다 큰 자연수 입니다.
조건 2. n의 다음 큰 숫자와 n은 2진수로 변환했을 때 1의 갯수가 같습니다.
조건 3. n의 다음 큰 숫자는 조건 1, 2를 만족하는 수 중 가장 작은 수 입니다.
예를 들어서 78(1001110)의 다음 큰 숫자는 83(1010011)입니다.

자연수 n이 매개변수로 주어질 때, n의 다음 큰 숫자를 return 하는 solution 함수를 완성해주세요.

제한 사항
n은 1,000,000 이하의 자연수 입니다.
입출력 예
n	result
78	83
15	23
입출력 예 설명
입출력 예#1
문제 예시와 같습니다.
입출력 예#2
15(1111)의 다음 큰 숫자는 23(10111)입니다.
*/

// 나의 풀이
const solution = n => {
    let oneLength = 0;
    let x = n + 1;
    oneLength = n.toString(2).split('').filter((e) => e === '1').length;
    while((x.toString(2).split('').filter((e) => e === '1').length) !== oneLength){
        x++;
    }
    return x;
}

/*
    .toString(2) 메소드를 사용해서 2진법으로 만들고, 1의 갯수를 oneLength 변수에 저장.
    while 반복문 사용해서 n + 1 부터 1씩 더해주고,
    해당 숫자(x = n + 1)가 이진법일때 n의 1 갯수랑 비교하며 같아질 때까지 1씩 올려주기.
    같아지면 return x
*/

